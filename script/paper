#!/usr/bin/env python
# -*- coding: utf-8 -*-

import argparse
import os

if __name__ == "__main__":
    ### check invocation dir

    basename = os.path.basename(os.getcwd())
    if (basename != "nominal-binding-algebras") and (basename != "syntax-and-semantics-of-abts"):
        print "Invoke this script from the project root; exitingâ€¦"
        exit(1)

    ### parse args

    parser = argparse.ArgumentParser(
        description = 'generate code and render document'
    )
    parser.add_argument(
        '--mode',
        choices = ['draft', 'final'],
        default = 'draft',
        help = 'set rendering mode'
    )
    parser.add_argument(
        '--watch',
        action = 'store_true',
        help = 'watch dependencies and re-render document on changes'
    )
    parser.add_argument(
        '--clean',
        action='store_true',
        help = 'remove generated files'
    )
    args = parser.parse_args()

    ### dispatch

    if args.clean:
        os.system(\
"""\
pushd script/.. 1>&-
latexmk -c 2>&-
rm -f Code.tex
popd 1>&-
exit 0\
""")
    else:
        opts_class = ''
        args_latexmk = ''
        args_pdflatex = ''

        if args.watch:
            # enable continuous preview
            args_latexmk += "%s" % '-pvc '
            # don't halt on errors
            args_pdflatex += '--interaction=nonstopmode'

        if args.mode == 'draft':
            args_latexmk += "%s" % '-bibtex- '
            opts_class += "\PassOptionsToClass{%s}{article}" % 'draft'
            opts_class += "\PassOptionsToPackage{%s}{graphicx}" % 'draft'
            opts_class += "\PassOptionsToPackage{%s}{hyperref}" % 'draft'
            opts_class += "\PassOptionsToPackage{%s}{ifdraft}" % 'draft'
            opts_class += "\PassOptionsToPackage{%s}{microtype}" % 'draft'

        if args.mode == 'final':
            opts_class += "\PassOptionsToClass{%s}{article}" % 'final'
            opts_class += "\PassOptionsToPackage{%s}{graphicx}" % 'final'
            opts_class += "\PassOptionsToPackage{%s}{hyperref}" % 'final'
            opts_class += "\PassOptionsToPackage{%s}{ifdraft}" % 'final'
            opts_class += "\PassOptionsToPackage{%s}{microtype}" % 'final'

        cmds_latex =\
"""\
pushd script/.. 1>&-
latexmk %s-pdflatex='internal custom_latex lualatex %s %%O \"%s\input{%%S}\"' paper
popd 1>&-
exit 0\
""" % (args_latexmk, args_pdflatex, opts_class)
        os.system(cmds_latex)
